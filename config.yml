bot_token: 123456:ABC-DEF1234ghIkl-zyx57W2v1u123ew11 # Your bot token, you should get this when you create your bot
subscriptions:
  - url: url1 # Example: https://rss.nytimes.com/services/xml/rss/nyt/HomePage.xml
    name: sub1 # Example: NYTimes HP
  - url: url2
    name: sub2
  - url: url3
    name: sub3
    interval: 120 # Optional. Default: 60 (minutes)
    item_xpath: /rss/channel/item # Optional. Define the xpath to an item
    source_type: XML # Optional. `HTML`, `XML` or `JSON`. Default: XML
    xpath: # Optional. Define the xpath to the fields in an item. Can have custom fields.
      link: ./link
      title: ./title
      description: ./description
      pubDate: ./pubDate
      customField: ./aCustomField
  - url: url4
    name: sub4
    source_type: JSON
    method: POST # HTTP method to use. Default: GET
    request_args: # kwargs send with `requests.request`
      json: # requests.request(method, url, json={"arg": "categoryId": 28})
          arg:
            categoryId: 28
    item_xpath: "node.get('rows', [])" # Python code to get the item. Must be a list.
    xpath:
      link: "[str(node.get('newsId', ''))]" # Python code to get a field. Must be a list of strings.
rssgroups: # You can group your subscriptions here
  group1: # A group containing two subscriptions
    subscriptions:
    - sub1
    - sub2
    config: # Optional.
      message_format: "{title}\n{description}\n{pubDate}\n{link}" # optional
      parse_mode: "" # Optional. Can be `MarkdownV2`, `HTMl`, `Markdown` or left blank. Default is none.
  group2: # A group containing one subscription
    subscriptions:
    - sub2
  group3: # A group containing some subscriptions and some other groups
    subscriptions:
    - sub3
    - sub1
    - group1
    - group2
channels:
  channel_name_1: group1 # Push the content from `group1` to the channel `channel_name_1`
  channel_name_2: sub1
